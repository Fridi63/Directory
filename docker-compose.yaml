#version: "3.5"
#
#services:
#  postgres:
#    image: postgres:12
#    command: postgres -c shared_preload_libraries=pg_stat_statements -c log_statement=all -c log_min_messages=INFO -c log_min_duration_statement=0
#    volumes:
#      - pgdata:/var/lib/postgresql/data/
#    env_file: .env
#    ports:
#      - 35432:5432
#    restart: always
#
#  migration:
#    build: .
#    command: python manage.py migrate --noinput
#    depends_on:
#      - postgres
#
#  app:
#    build: .
#    command: python manage.py runserver
#    env_file: .env
#    expose:
#      - "8000"
#    depends_on:
#      - postgres
#      - migration
#    restart: always
#
#  redis:
#    image: redis:6.2
#    ports:
#      - 6378:6379
#
#volumes:
#  pgdata:


#version: "3.5"
#
#services:
#  postgres:
#    image: postgres:12
#    command: postgres -c shared_preload_libraries=pg_stat_statements -c log_statement=all -c log_min_messages=INFO -c log_min_duration_statement=0
#    environment:
#      POSTGRES_USER: $POSTGRES_USER
#      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
#      POSTGRES_DB: $POSTGRES_DB
#    volumes:
#      - postgres-volume:/var/lib/postgresql/data
#    ports:
#      - 35432:5432
#    restart: always

#  django:
#    build: .
#    command: sh -c "python manage.py migrate
#             && python manage.py runserver 0.0.0.0:8000"
#    env_file: .env
#    volumes:
#      - .:/app
#    ports:
#      - 8088:8000
#    restart: always

#  redis:
#    image: redis:6.2
##    networks: celery-network
#
#    ports:
#      - '6378:6379'


#    networks: celery-network

#    ports:
#      - '5672:5672'

#  celery:
#    build: .
#    command: celery -A blog worker -l INFO
#    env_file: .env
#    depends_on:
#      - postgres
#      - redis
#
##    networks: celery-network
#    restart: always

#volumes:
#  postgres-volumes:

#networks:
#  - celery-network:

version: '3'

services:
  postgres:
    image: postgres:12
    ports:
      - "$DB_PORT:5432"
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
  redis:
    image: redis:6.2
    ports:
      - 6378:6379
#  app:
#    build: .
#    command: sh -c "python manage.py migrate
      ##             && python manage.py runserver 0.0.0.0:8000"
#    env_file: .env
#    expose:
#      - "8000"
#    depends_on:
#      - postgres
#      - redis
#    restart: always